
#user  nobody;
worker_processes  1;

error_log  /root/logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 8080 reuseport;
        location / {
            default_type application/json;
            content_by_lua_block {
                local sdng = require "sdng"
                sdng.index()
            }
        }

        location /ephemeral_keys {
            default_type application/json;
            content_by_lua_block {
                local sdng = require "sdng"
                sdng.ephemeral_keys()
            }
        }

        location /fetch {
            default_type application/json;
            content_by_lua_block {
                local sdng = require "sdng"
                sdng.fetch()
            }
        }

        location /keys {
            default_type application/json;
            content_by_lua_block {
                local sdng = require "sdng"
                sdng.keys()
            }
        }

        location /message {
            default_type application/json;
            content_by_lua_block {
                local sdng = require "sdng"
                sdng.message()
            }
        }

        location /journalists {
            default_type application/json;
            content_by_lua_block {
                local sdng = require "sdng"
                sdng.journalists()
            }
        }
    }

    server {
        listen       80;
        server_name  localhost;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
